# NOTE: update this with your service name
service: notes-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: us-east-2
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  environment:
   tableName: notes
   stripeSecretKey: ${env:STRIPE_SECRET_KEY}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:us-east-2:*:*"

resources:
  - ${file(resources/api-gateway-errors.yml)}

functions:
  create:
    handler: create.main
    events:
    - http:
        path: notes
        method: post
        authorizer: aws_iam
        cors: true
  
  get:
    handler: get.main
    events:
    - http:
        path: notes/{id}
        method: get
        authorizer: aws_iam
        cors: true
  
  list:
    handler: list.main
    events:
    - http:
        path: notes
        method: get
        authorizer: aws_iam
        cors: true

  update:
    handler: update.main
    events:
    - http:
        path: notes/{id}
        method: put
        authorizer: aws_iam
        cors: true

  delete:
    handler: delete.main
    events:
    - http:
        path: notes/{id}
        method: delete
        authorizer: aws_iam
        cors: true
    
  billing:
    handler: billing.main
    events:
    - http:
        path: billing
        method: post
        authorizer: aws_iam
        cors: true